#!/usr/bin/python3

### COMP 412, Fall 2022
### Timing function for SLOCs on Lab 1
### 
### Need a separate version for each lab because of the idiosyncratic
### command line arguments to each lab
###
### -- keith, May 2022

import os, time, calendar, datetime, sys
from datetime import datetime, date

### Code to run the executable on one block and time it
def timing_run(executable,flags,path_to_block):

    command_line = "timeout 300s " +executable+" "+flags+" "+path_to_block+" >&/dev/null"

    start_tic = datetime.now()
    os.system(command_line)
    stop_tic  = datetime.now()
    elapsed = stop_tic - start_tic
    elapsed_time = (elapsed.days * 86400 + elapsed.seconds) * 1000 + elapsed.microseconds / 1000.0
    return elapsed_time

### Run a single executable over all the files in the designated directory
def run_test(testdir,execname,flags): # execname is string name of executable
    global result_file

    for test in sorted(os.listdir(testdir)):
        if not '.i' in test:
            continue

        result = timing_run(execname,flags,testdir+test) 

        result = round(result / 1000,4) # convert milliseconds to seconds

        print ("File ",test,":  "+str(result)+" seconds")
        result_file.write("File "+test+":  "+str(result)+" seconds\n")

        if result > 299:
            print ("Maximum time exceeded; major efficiency problem.\n")
            break;

def main():
    global result_file
    global dir

    argc = len(sys.argv)

    if argc != 2:
        print ("The timer takes a single argument, the name of your front end.\n")
        exit(0)

    # Who, what where, when, and what machine ...
    username  = os.getlogin()
    execname = sys.argv[1]
    dir       = "/clear/courses/comp412/students/ILOC/Scalability/SLOCs/"
    today     = date.today().strftime("%m-%d-%y")
    hostname = os.uname()[1]

    # Create the log file
    try:
        result_file = open("./"+username+".log",'w')
    except:
        print ("Result file could not be opened. Exiting early.")
        exit(0)

    # Write header to stdout
    print ("COMP 412, Lab 2 Timing Test")
    print ("Files from '"+dir+"'\n")

    # Write header to log file
    result_file.write("COMP 412, Lab 1 Timing Test\n\nHost:\t\t"+hostname+"\nDate:\t\t"+today+"\n")
    result_file.write("Username:\t"+username+"\n")
    result_file.write("Executable:\t"+execname+"\n")
    result_file.write("Files from:\t"+dir+"\n\n")

    run_test(dir,execname," -p ") # run the test

    print("\nEnd of run.\n")   	  # mark successful completion
    result_file.write("\nEnd of run.\n")
    result_file.close()

if __name__ == "__main__":
    main()

